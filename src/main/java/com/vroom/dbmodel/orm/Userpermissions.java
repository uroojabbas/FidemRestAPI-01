package com.vroom.dbmodel.orm;
// Generated Aug 7, 2019 12:43:50 AM by Hibernate Tools 5.2.0.Final


import com.fasterxml.jackson.annotation.JsonIgnore;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Userpermissions generated by hbm2java
 */
@Entity
@Table(name="userpermissions"
)
public class Userpermissions  implements java.io.Serializable {


     private Integer id;
     private Userrole userrole;
     private Users users;
     private Boolean isDeleted;
     private Date insertedtime;
     private Integer insertedbyuserid;
     private Integer modifiedbyuserid;
     private Date modifiedtime;

    public Userpermissions() {
    }

	
    public Userpermissions(Userrole userrole, Users users) {
        this.userrole = userrole;
        this.users = users;
    }
    public Userpermissions(Userrole userrole, Users users, Boolean isDeleted, Date insertedtime, Integer insertedbyuserid, Integer modifiedbyuserid, Date modifiedtime) {
       this.userrole = userrole;
       this.users = users;
       this.isDeleted = isDeleted;
       this.insertedtime = insertedtime;
       this.insertedbyuserid = insertedbyuserid;
       this.modifiedbyuserid = modifiedbyuserid;
       this.modifiedtime = modifiedtime;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="roleId", nullable=false, referencedColumnName = "roleId")
    public Userrole getUserrole() {
        return this.userrole;
    }
    
    public void setUserrole(Userrole userrole) {
        this.userrole = userrole;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="userId", nullable=false)
    @JsonIgnore
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }

    
    @Column(name="isDeleted")
    public Boolean getIsDeleted() {
        return this.isDeleted;
    }
    
    public void setIsDeleted(Boolean isDeleted) {
        this.isDeleted = isDeleted;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="insertedtime", length=10)
    public Date getInsertedtime() {
        return this.insertedtime;
    }
    
    public void setInsertedtime(Date insertedtime) {
        this.insertedtime = insertedtime;
    }

    
    @Column(name="insertedbyuserid")
    public Integer getInsertedbyuserid() {
        return this.insertedbyuserid;
    }
    
    public void setInsertedbyuserid(Integer insertedbyuserid) {
        this.insertedbyuserid = insertedbyuserid;
    }

    
    @Column(name="modifiedbyuserid")
    public Integer getModifiedbyuserid() {
        return this.modifiedbyuserid;
    }
    
    public void setModifiedbyuserid(Integer modifiedbyuserid) {
        this.modifiedbyuserid = modifiedbyuserid;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="modifiedtime", length=10)
    public Date getModifiedtime() {
        return this.modifiedtime;
    }
    
    public void setModifiedtime(Date modifiedtime) {
        this.modifiedtime = modifiedtime;
    }

}


