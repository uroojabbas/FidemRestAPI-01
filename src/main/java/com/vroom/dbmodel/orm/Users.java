package com.vroom.dbmodel.orm;
// Generated Nov 22, 2018 8:33:46 PM by Hibernate Tools 5.2.0.Final


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;
import javax.persistence.Entity;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name="users"
    , uniqueConstraints = {@UniqueConstraint(columnNames="name"), @UniqueConstraint(columnNames="username")} 
)
public class Users  extends AbstractEntity {


     private Integer id;
     private Department department;
     private Designation designation;
     private String name;
     private String email;
     private String phone;
     private String address;
     private Integer cityid;
     private Integer regionid;
     private Integer gender;
     private Boolean permanent;
     private Date hiredate;
     private Boolean isdeleted;
     private String username;
     private String password;

     private String departmentname;
     private String designationname;

    private Set<Userpermissions> userpermissionses = new HashSet<Userpermissions>(0);

    @Transient
     public String getDepartmentname(){
         if(this.departmentname == null ||
                 this.departmentname.isEmpty()){
             return this.department.getName();
         }else{
             return this.departmentname;
         }
     }

     @Transient
     public String getDesignationname(){
         if(this.designationname == null ||
                 this.designationname.isEmpty()){
             return this.designation.getName();
         }else{
             return this.designationname;
         }
     }

    public Users() {
    }

	
    public Users(String name, String address, String username) {
        this.name = name;
        this.address = address;
        this.username = username;
    }
    public Users(Department department, Designation designation, String name, String email, String phone, String address, Integer cityid, Integer regionid, Integer gender, Boolean permanent, Date hiredate, Boolean isdeleted, String username, String password) {
       this.department = department;
       this.designation = designation;
       this.name = name;
       this.email = email;
       this.phone = phone;
       this.address = address;
       this.cityid = cityid;
       this.regionid = regionid;
       this.gender = gender;
       this.permanent = permanent;
       this.hiredate = hiredate;
       this.isdeleted = isdeleted;
       this.username = username;
       this.password = password;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="departmentid")
    public Department getDepartment() {
        return this.department;
    }
    
    public void setDepartment(Department department) {
        this.department = department;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="designationid")
    public Designation getDesignation() {
        return this.designation;
    }
    
    public void setDesignation(Designation designation) {
        this.designation = designation;
    }

    
    @Column(name="name", unique=true, nullable=false, length=50)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="email", length=100)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="phone", length=56)
    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }

    
    @Column(name="address", nullable=false, length=256)
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }

    
    @Column(name="cityid")
    public Integer getCityid() {
        return this.cityid;
    }
    
    public void setCityid(Integer cityid) {
        this.cityid = cityid;
    }

    
    @Column(name="regionid")
    public Integer getRegionid() {
        return this.regionid;
    }
    
    public void setRegionid(Integer regionid) {
        this.regionid = regionid;
    }

    
    @Column(name="gender")
    public Integer getGender() {
        return this.gender;
    }
    
    public void setGender(Integer gender) {
        this.gender = gender;
    }

    
    @Column(name="permanent")
    public Boolean getPermanent() {
        return this.permanent;
    }
    
    public void setPermanent(Boolean permanent) {
        this.permanent = permanent;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="hiredate", length=10)
    public Date getHiredate() {
        return this.hiredate;
    }
    
    public void setHiredate(Date hiredate) {
        this.hiredate = hiredate;
    }

    
    @Column(name="isdeleted")
    public Boolean getIsdeleted() {
        return this.isdeleted;
    }
    
    public void setIsdeleted(Boolean isdeleted) {
        this.isdeleted = isdeleted;
    }

    
    @Column(name="username", unique=true, nullable=false, length=256)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="password", length=1024)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<Userpermissions> getUserpermissionses() {
        return this.userpermissionses;
    }

    public void setUserpermissionses(Set<Userpermissions> userpermissionses) {
        this.userpermissionses = userpermissionses;
    }
}


